---
name: CI

on:
  # WARNING: This Repo is PUBLIC. Do NOT USE `pull_request_target`. This could allow anyone to run the github action (information taken from https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#controlling-changes-from-forks-to-workflows-in-public-repositories)
  pull_request:
    branches: [main]
    paths-ignore:
      - '**/*.md'
  push:
    tags:
      - v*

env:
  # As of writing this is the latest commit on the qt6-gha branch
  QTWEBKIT: f2cfa163e18a2f7be24c4591b5afd8e884cc45ff

jobs:
  tar-src:
    outputs:
      short_version: ${{ steps.config.outputs.short_version }}

    name: "Tar source"
    runs-on: "ubuntu-latest-8-cores"
    steps:
      - id: config
        run: |
          echo "artefact_name=qtwebkit-${QTWEBKIT:0:7}-src.tar.gz" >> $GITHUB_OUTPUT
          echo "short_version=${QTWEBKIT:0:7}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          repository: quarcko/webkit
          ref: ${{ env.QTWEBKIT }}
          submodules: true
          path: qtwebkit-src
      - name: Archive
        run: tar --create --xz --file "${{ steps.config.outputs.artefact_name }}" --exclude-vcs qtwebkit-src
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: "${{ steps.config.outputs.artefact_name }}"
          path: "${{ github.workspace }}/${{ steps.config.outputs.artefact_name }}"

  build:
    name: "Build ${{ matrix.config.os }}"
    runs-on: "ubuntu-latest-8-cores"
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: "ubuntu-22.04"
            std: "17"

    steps:
      - id: config
        run: echo "artefact_name=qtwebkit-${QTWEBKIT:0:7}-cpp${{ matrix.config.std }}-${{ matrix.config.os }}-x64.tar.gz" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: |
          # Azure repositories are currently unstable
          sudo sed -i 's/azure\.//' /etc/apt/sources.list
          # This PPA includes a non standard version of libicu that we have to remove
          sudo sudo add-apt-repository --remove ppa:ondrej/php
          sudo apt-get purge -y libicu-dev
          sudo apt-get -o Acquire::Retries=3 update
          sudo apt-get -o Acquire::Retries=3 install -y \
            build-essential \
            bison \
            cmake \
            flex \
            fontconfig \
            gperf \
            libhyphen-dev \
            libicu-dev \
            libjpeg-dev \
            libpng-dev \
            libpcre2-dev \
            libsqlite3-dev \
            libxml2-dev \
            libxslt1-dev \
            ninja-build \
            perl \
            python2.7 \
            ruby \
            zlib1g-dev \
            libegl1-mesa-dev \
            libglu1-mesa-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            libxcomposite-dev \
            libunwind-dev \
            libharfbuzz-dev \
            libwebp-dev \
            libtasn1-6-dev \
            libwoff-dev \
      - name: Install Qt
        run: curl -L https://github.com/constructpm/qt-build/releases/download/v6.7.1-1/qt-6.7.1-cpp17-${{ matrix.config.os }}-x64.tar.gz | sudo tar -xJC /opt
      - uses: actions/checkout@v4
        with:
          repository: movableink/webkit
          ref: ${{ env.QTWEBKIT }}
          submodules: true
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake \
            -G Ninja \
            -DPORT=Qt \
            -DCMAKE_BUILD_TYPE=Debug \
            -DQt6_DIR=/opt/qt6/lib/cmake/Qt6 \
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/opt/qt6" \
            -DCMAKE_INSTALL_LIBDIR=lib \
            -DKDE_INSTALL_LIBDIR=lib \
            ..
      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: ninja install
      - name: Archive
        working-directory: ${{ github.workspace }}/opt
        run: tar cJfv "${{ steps.config.outputs.artefact_name }}" qt6
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: "${{ steps.config.outputs.artefact_name }}"
          path: "${{ github.workspace }}/opt/${{ steps.config.outputs.artefact_name }}"

  release:
    if: contains(github.ref, 'tags/v')

    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - tar-src
      - build

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  upload:
    if: contains(github.ref, 'tags/v')

    name: "Upload ${{ matrix.config.artefact }} to release"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - artefact: qtwebkit-${{ needs.tar-src.outputs.short_version }}-src.tar.gz
          - artefact: qtwebkit-${{ needs.tar-src.outputs.short_version }}-cpp17-ubuntu-22.04-x64.tar.gz
    needs:
      - tar-src
      - release

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.config.artefact }}"
          path: ./
      - name: Upload to Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: "./${{ matrix.config.artefact }}"
          asset_name: "${{ matrix.config.artefact }}"
          asset_content_type: application/x-gtar
